{"ast":null,"code":"var _jsxFileName = \"/Users/dauinh/Desktop/tinderXreal/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// require(\"dotenv\").config();\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const express = require(\"express\");\n// const multer = require(\"multer\");\n// const path = require(\"path\");\n// const PORT = process.env.PORT || 8080;\n\n// const app = express();\n\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cors());\n// app.use(express.static(path.join(__dirname, \"public\")));\n\n// // create constants for the application.\n// const constants = {\n//   matchRequestStatus: {\n//     pending: 0,\n//     accepted: 1,\n//     rejected: -1,\n//   },\n// };\n\n// // config multers.\n// const storage = multer.diskStorage({\n//   destination: function (req, file, cb) {\n//     cb(null, \"public/img\");\n//   },\n//   filename: function (req, file, cb) {\n//     cb(null, `${file.fieldname}-${Date.now()}.jpg`);\n//   },\n// });\n\n// const upload = multer({ storage: storage });\n\n// create datbase connection","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","root","createRoot","document","getElementById","render"],"sources":["/Users/dauinh/Desktop/tinderXreal/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// require(\"dotenv\").config();\n// const bodyParser = require(\"body-parser\");\n// const cors = require(\"cors\");\n// const express = require(\"express\");\n// const multer = require(\"multer\");\n// const path = require(\"path\");\n// const PORT = process.env.PORT || 8080;\n\n// const app = express();\n\n// app.use(bodyParser.json());\n// app.use(bodyParser.urlencoded({ extended: true }));\n// app.use(cors());\n// app.use(express.static(path.join(__dirname, \"public\")));\n\n// // create constants for the application.\n// const constants = {\n//   matchRequestStatus: {\n//     pending: 0,\n//     accepted: 1,\n//     rejected: -1,\n//   },\n// };\n\n// // config multers.\n// const storage = multer.diskStorage({\n//   destination: function (req, file, cb) {\n//     cb(null, \"public/img\");\n//   },\n//   filename: function (req, file, cb) {\n//     cb(null, `${file.fieldname}-${Date.now()}.jpg`);\n//   },\n// });\n\n// const upload = multer({ storage: storage });\n\n// create datbase connection"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAAC;AAChD,MAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,KAAK,CAAC,UAAU;EAAA,uBACf,QAAC,GAAG;IAAA;IAAA;IAAA;EAAA;AAAG;EAAA;EAAA;EAAA;AAAA,QACU,CACpB;;AAED;AACA;AACA;AACAL,eAAe,EAAE;;AAGjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module"}